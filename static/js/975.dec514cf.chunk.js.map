{"version":3,"file":"static/js/975.dec514cf.chunk.js","mappings":"0PAEaA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,QAAV,EAEtBC,EAAe,SAAAF,GAAK,OAAIA,EAAMG,MAAV,EAEpBC,GAAwBC,EAAAA,EAAAA,IACnC,CAACN,EAAgBG,IACjB,WAAYC,GAAY,IAArBG,EAAoB,EAApBA,MACKC,EAAmBJ,EAAOK,cAChC,MAAe,KAAXL,EACKG,EAAMG,UAAS,SAACC,EAAGC,GACxB,OAAOA,EAAEC,GAAKF,EAAEE,EACjB,IAGIN,EACJH,QAAO,SAAAU,GAAI,OAAIA,EAAKC,KAAKN,cAAcO,SAASR,EAArC,IACXE,UAAS,SAACC,EAAGC,GACZ,OAAOA,EAAEC,GAAKF,EAAEE,EACjB,GACJ,I,4BClBUI,GAAmBC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,oJAUhBE,EAAQF,EAAAA,EAAAA,MAAH,6HASLG,GAAQH,EAAAA,EAAAA,GAAOI,EAAAA,GAAPJ,CAAH,8LAaLK,EAAeL,EAAAA,EAAAA,OAAH,6P,SCvBnBM,EAAgB,CACpBT,KAAM,GACNU,OAAQ,IAGGC,EAAc,WACzB,IAAMC,GAAWC,EAAAA,EAAAA,eACTrB,GAAUsB,EAAAA,EAAAA,aAAY7B,GAAtBO,MAcR,OACE,SAAC,KAAD,CAAQiB,cAAeA,EAAeM,SAbnB,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAE5BzB,EAAM0B,MAAK,SAAAnB,GAAI,OAAIA,EAAKC,KAAKN,gBAAkBsB,EAAOhB,KAAKN,aAA5C,IAEfyB,MAAM,GAAD,OAAIH,EAAOhB,KAAX,8BAIPY,GAASQ,EAAAA,EAAAA,IAAWJ,IACpBC,IACD,EAGC,UACE,UAACf,EAAD,YACE,UAACG,EAAD,CAAOgB,QAAQ,OAAf,UAAsB,QAEpB,SAACf,EAAD,CACEgB,KAAK,OACLtB,KAAK,OACLF,GAAG,OACHyB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAGZ,UAACpB,EAAD,CAAOgB,QAAQ,SAAf,UAAwB,UAEtB,SAACf,EAAD,CACEgB,KAAK,MACLtB,KAAK,SACLF,GAAG,SACHyB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAIZ,SAACjB,EAAD,CAAcc,KAAK,SAAnB,SAA4B,oBAInC,E,UC7DYjB,EAAQF,EAAAA,EAAAA,MAAH,gHAQLG,EAAQH,EAAAA,EAAAA,MAAH,oNCJLuB,EAAS,WACpB,IAAMd,GAAWC,EAAAA,EAAAA,eACXxB,GAASyB,EAAAA,EAAAA,aAAY1B,GAM3B,OACE,UAAC,EAAD,WAAO,yBAEL,SAAC,EAAD,CAAOkC,KAAK,OAAOK,MAAOtC,EAAQuC,SAPX,SAAAC,GACzBjB,GAASkB,EAAAA,EAAAA,GAAUD,EAAIE,cAAcJ,OACtC,MAQF,EClBYK,EAAc7B,EAAAA,EAAAA,EAAH,iFAOX8B,EAAe9B,EAAAA,EAAAA,OAAH,uOCJZ+B,EAAU,SAAC,GAA0B,IAAxBpC,EAAuB,EAAvBA,GAAIE,EAAmB,EAAnBA,KAAMU,EAAa,EAAbA,OAC5BE,GAAWC,EAAAA,EAAAA,eAIjB,OACE,iCACE,UAACmB,EAAD,WACGhC,EAAK,KAAGU,MAEX,SAACuB,EAAD,CAAcX,KAAK,SAASa,QAPN,kBAAMvB,GAASwB,EAAAA,EAAAA,IAActC,GAA7B,EAOtB,SAAwD,aAK7D,EChBYuC,GAFclC,EAAAA,EAAAA,GAAH,sBAEGA,EAAAA,EAAAA,GAAH,0OCCXmC,EAAc,WACzB,IAAMC,GAAkBzB,EAAAA,EAAAA,aAAYxB,GAEpC,OACE,0BACE,wBACGiD,EAAgBC,KAAI,SAAAzC,GACnB,OACE,SAACsC,EAAD,WACE,SAACH,EAAD,CAASpC,GAAIC,EAAKD,GAAIE,KAAMD,EAAKC,KAAMU,OAAQX,EAAKW,UADpCX,EAAKD,GAI1B,OAIR,ECnBY2C,EAAYtC,EAAAA,EAAAA,IAAH,0CAITuC,EAAQvC,EAAAA,EAAAA,GAAH,4CAILwC,EAAWxC,EAAAA,EAAAA,GAAH,4CCoBrB,EApBiB,WACf,IAAMS,GAAWC,EAAAA,EAAAA,eACjB,GAA6BC,EAAAA,EAAAA,aAAY7B,GAAjC2D,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,MAMnB,OAJAC,EAAAA,EAAAA,YAAU,WACRlC,GAASmC,EAAAA,EAAAA,MACV,GAAE,CAACnC,KAGF,UAAC6B,EAAD,YACE,SAACC,EAAD,UAAO,eACP,SAAC/B,EAAD,KACA,SAACgC,EAAD,UAAU,cACV,SAACjB,EAAD,IACCkB,IAAcC,IAAS,uBAAG,yBAC3B,SAAC,EAAD,MAGL,C","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filted.styled.jsx","components/Filter/Filter.jsx","components/Contact/Contact.styled.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","pages/Contacts.styled.jsx","pages/Contacts.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectFiltredContacts = createSelector(\n  [selectContacts, selectFilter],\n  ({ items }, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    if (filter === '') {\n      return items.toSorted((a, b) => {\n        return b.id - a.id;\n      });\n    }\n\n    return items\n      .filter(item => item.name.toLowerCase().includes(normalizedFilter))\n      .toSorted((a, b) => {\n        return b.id - a.id;\n      });\n  }\n);\n","import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\n\nexport const ContactInputForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  width: 400px;\n  padding: 15px;\n\n  border: 2px solid black;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n\n  font-size: 20px;\n  font-weight: 600;\n`;\n\nexport const Input = styled(Field)`\n  width: 180px;\n  border: 1px solid #a78484;\n  border-radius: 2px;\n\n  font-size: 16px;\n\n  &:focus {\n    border: 3px solid #1a91b999;\n    outline: none;\n  }\n`;\n\nexport const SubmitButton = styled.button`\n  width: 100px;\n  margin-top: 15px;\n  text-align: center;\n  background-color: #ffffff;\n  border-radius: 4px;\n  border: 1px solid #a78484;\n\n  &:hover,\n  &:focus {\n    box-shadow: 1px 1px 1px gray;\n    scale: 1.03;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { addContact } from '../../redux/contacts/operations';\nimport { useSelector } from 'react-redux';\nimport { selectContacts } from '../../redux/contacts/selectors';\nimport {\n  Label,\n  ContactInputForm,\n  Input,\n  SubmitButton,\n} from './ContactForm.styled';\nimport { Formik } from 'formik';\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const { items } = useSelector(selectContacts);\n\n  const handleSubmit = (values, { resetForm }) => {\n    if (\n      items.find(item => item.name.toLowerCase() === values.name.toLowerCase())\n    ) {\n      alert(`${values.name} is already in contacts.`);\n      return;\n    }\n\n    dispatch(addContact(values));\n    resetForm();\n  };\n\n  return (\n    <Formik initialValues={initialValues} onSubmit={handleSubmit}>\n      <ContactInputForm>\n        <Label htmlFor=\"name\">\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            id=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </Label>\n        <Label htmlFor=\"number\">\n          Number\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            id=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </Label>\n\n        <SubmitButton type=\"submit\">Add contact</SubmitButton>\n      </ContactInputForm>\n    </Formik>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n\n  font-size: 20px;\n  font-weight: 600;\n`;\n\nexport const Input = styled.input`\n  margin-top: 8px;\n\n  width: 180px;\n  border: 1px solid #a78484;\n  border-radius: 2px;\n\n  font-size: 16px;\n\n  &:focus {\n    border: 3px solid #1a91b999;\n    outline: none;\n  }\n`;\n","import { selectFilter } from '../../redux/contacts/selectors';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from '../../redux/contacts/filterSlice';\nimport { useSelector } from 'react-redux';\nimport { Label, Input } from './Filted.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleFilterChange = evt => {\n    dispatch(setFilter(evt.currentTarget.value));\n  };\n\n  return (\n    <Label>\n      Find contacts by name\n      <Input type=\"text\" value={filter} onChange={handleFilterChange} />\n    </Label>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const ContactInfo = styled.p`\n  margin: 0;\n\n  font-size: 20px;\n  font-weight: 600;\n`;\n\nexport const DeleteButton = styled.button`\n  width: 60px;\n  text-align: center;\n  background-color: #ffffff;\n  border-radius: 4px;\n  border: 1px solid #a78484;\n\n  &:hover,\n  &:focus {\n    box-shadow: 1px 1px 1px gray;\n    scale: 1.03;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport { ContactInfo, DeleteButton } from './Contact.styled';\n\nexport const Contact = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  const handleDelBtnClick = () => dispatch(deleteContact(id));\n\n  return (\n    <>\n      <ContactInfo>\n        {name}: {number}\n      </ContactInfo>\n      <DeleteButton type=\"submit\" onClick={handleDelBtnClick}>\n        Delete\n      </DeleteButton>\n    </>\n  );\n};\n\nContact.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const ContactList = styled.ul``;\n\nexport const ContactItem = styled.li`\n  display: flex;\n  align-items: center;\n  gap: 15px;\n  margin: 0 0 20px 0;\n\n  &::before {\n    content: '';\n    width: 7px;\n    height: 7px;\n    border-radius: 50%;\n    background-color: black;\n  }\n`;\n","import { useSelector } from 'react-redux';\nimport { selectFiltredContacts } from '../../redux/contacts/selectors';\nimport { Contact } from '../Contact/Contact';\nimport { ContactItem } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const filtredContacts = useSelector(selectFiltredContacts);\n\n  return (\n    <div>\n      <ul>\n        {filtredContacts.map(item => {\n          return (\n            <ContactItem key={item.id}>\n              <Contact id={item.id} name={item.name} number={item.number} />\n            </ContactItem>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  padding: 20px;\n`;\n\nexport const Title = styled.h1`\n  font-size: 40px;\n`;\n\nexport const Subtitle = styled.h2`\n  font-size: 30px;\n`;\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from '../redux/contacts/operations';\nimport { useSelector } from 'react-redux';\nimport { selectContacts } from '../redux/contacts/selectors';\nimport { ContactForm } from '../components/ContactForm/ContactForm';\nimport { Filter } from '../components/Filter/Filter';\nimport { ContactList } from '../components/ContactList/ContactList';\nimport { Container, Title, Subtitle } from './Contacts.styled';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const { isLoading, error } = useSelector(selectContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <Title>Phonebook</Title>\n      <ContactForm />\n      <Subtitle>Contacts</Subtitle>\n      <Filter />\n      {isLoading && !error && <b>Loading contacts...</b>}\n      <ContactList />\n    </Container>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","selectFilter","filter","selectFiltredContacts","createSelector","items","normalizedFilter","toLowerCase","toSorted","a","b","id","item","name","includes","ContactInputForm","styled","Form","Label","Input","Field","SubmitButton","initialValues","number","ContactForm","dispatch","useDispatch","useSelector","onSubmit","values","resetForm","find","alert","addContact","htmlFor","type","pattern","title","required","Filter","value","onChange","evt","setFilter","currentTarget","ContactInfo","DeleteButton","Contact","onClick","deleteContact","ContactItem","ContactList","filtredContacts","map","Container","Title","Subtitle","isLoading","error","useEffect","fetchContacts"],"sourceRoot":""}