{"version":3,"file":"static/js/665.0afdd568.chunk.js","mappings":"mSAQaA,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,eAEXC,EAAY,mCAAG,WAAMC,GAAN,8EACnBA,EAAEC,iBACIC,EAAOF,EAAEG,cAFI,kBAIXN,GACJO,EAAAA,EAAAA,IAAS,CACPC,KAAMH,EAAKI,SAASD,KAAKE,MACzBC,MAAON,EAAKI,SAASE,MAAMD,MAC3BE,SAAUP,EAAKI,SAASG,SAASF,SAEnCG,SAVe,OAWjBC,EAAAA,GAAAA,QAAc,4BACdT,EAAKU,QAZY,gDAcjBD,EAAAA,GAAAA,MAAY,uBAdK,yDAAH,sDAkBlB,OACE,UAACE,EAAA,EAAD,CACEC,UAAU,OACVC,GAAI,CACFC,MAAO,IACPC,GAAI,EACJC,QAAS,OACTC,IAAK,EACLC,cAAe,UAEjBC,YAAU,EACVC,SAAUvB,EACVwB,aAAa,MAXf,WAaE,SAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKX,UAAU,IAAnC,SAAuC,kBAIvC,SAACY,EAAA,EAAD,CACEC,GAAG,OACHC,MAAM,YACNH,QAAQ,WACRI,KAAK,OACLxB,KAAK,OACLyB,KAAK,WAGP,SAACJ,EAAA,EAAD,CACEC,GAAG,QACHC,MAAM,SACNH,QAAQ,WACRI,KAAK,QACLxB,KAAK,QACLyB,KAAK,WAGP,SAACJ,EAAA,EAAD,CACEC,GAAG,WACHC,MAAM,WACNH,QAAQ,WACRI,KAAK,WACLxB,KAAK,WACLyB,KAAK,WAEP,SAACC,EAAA,EAAD,CACEF,KAAK,SACLJ,QAAQ,YACRK,KAAK,QACLf,GAAI,CACFC,MAAO,KALX,SAOC,eAKN,EC1ED,EATiB,WACf,OACE,4BACE,2BAAO,kBACP,SAACpB,EAAD,MAGL,C","sources":["components/RegisterForm/RegisterForm.jsx","pages/Register.js"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/authOperations';\nimport toast from 'react-hot-toast';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    try {\n      await dispatch(\n        register({\n          name: form.elements.name.value,\n          email: form.elements.email.value,\n          password: form.elements.password.value,\n        })\n      ).unwrap();\n      toast.success('Successfully registered!');\n      form.reset();\n    } catch (error) {\n      toast.error('Error Registration!');\n    }\n  };\n\n  return (\n    <Box\n      component=\"form\"\n      sx={{\n        width: 300,\n        ml: 2,\n        display: 'flex',\n        gap: 2,\n        flexDirection: 'column',\n      }}\n      noValidate\n      onSubmit={handleSubmit}\n      autoComplete=\"off\"\n    >\n      <Typography variant=\"h5\" component=\"p\">\n        Registration\n      </Typography>\n\n      <TextField\n        id=\"name\"\n        label=\"User Name\"\n        variant=\"outlined\"\n        type=\"text\"\n        name=\"name\"\n        size=\"small\"\n      />\n\n      <TextField\n        id=\"email\"\n        label=\"E-mail\"\n        variant=\"outlined\"\n        type=\"email\"\n        name=\"email\"\n        size=\"small\"\n      />\n\n      <TextField\n        id=\"password\"\n        label=\"Password\"\n        variant=\"outlined\"\n        type=\"password\"\n        name=\"password\"\n        size=\"small\"\n      />\n      <Button\n        type=\"submit\"\n        variant=\"contained\"\n        size=\"small\"\n        sx={{\n          width: 120,\n        }}\n      >\n        Register\n      </Button>\n    </Box>\n  );\n};\n","import { RegisterForm } from '../components/RegisterForm/RegisterForm';\n\nconst Register = () => {\n  return (\n    <div>\n      <title>Registration</title>\n      <RegisterForm />\n    </div>\n  );\n};\n\nexport default Register;\n"],"names":["RegisterForm","dispatch","useDispatch","handleSubmit","e","preventDefault","form","currentTarget","register","name","elements","value","email","password","unwrap","toast","reset","Box","component","sx","width","ml","display","gap","flexDirection","noValidate","onSubmit","autoComplete","Typography","variant","TextField","id","label","type","size","Button"],"sourceRoot":""}